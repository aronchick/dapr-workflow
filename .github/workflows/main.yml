name: main

on:
  push:
    branches: [ main ]
  # workflow_dispatch:
  #   inputs:
  #     tags:
  #       description: 'Workflow Dispatched'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  workflow_run:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: hack python
      run: |
        # Hack to get setup-python to work on act
        if [ ! -f "/etc/lsb-release" ] ; then
          echo "DISTRIB_RELEASE=18.04" > /etc/lsb-release
        fi

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7.9'

    - name: Setup Environment
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        python3 -m pip install -r requirements.txt
        ./setup_dapr.sh

    - name: Setting up dapr
      id: create_components
      run: |
        python3 export_secrets_to_components.py
        dapr init
        dapr run --app-id dapr_sidecar -d components -P grpc -G 20001 &
      env:
        WORKFLOWVAULTRBACCERT: ${{ secrets.WORKFLOWVAULTRBACCERT }}
        COMPONENT_AZUREKEYVAULT: ${{ secrets.COMPONENT_AZUREKEYVAULT }}
        COMPONENT_LOCALREDISSTATE: ${{ secrets.COMPONENT_LOCALREDISSTATE }}
        COMPONENT_AZURESB: ${{ secrets.COMPONENT_AZURESB }}

    - name: Cache Installation
      uses: actions/cache@v2
      env:
        cache-name: cache-installation
      with:
        path: ~/.local
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Step 1 - Retrieve a secret
      id: step_1
      run: python3 step_1.py

    - name: Step 2 - Execute two race condition possible steps simultanenously
      id: step_2
      run: python3 step_2.py

    - name: Step 3 - Fire off a long running job
      id: step_3
      run: python3 step_3.py
      env:
        EXTERNAL_PIPELINE: ${{ secrets.EXTERNAL_PIPELINE }}
        EXTERNAL_PIPELINE_SHARED_SECRET: ${{ secrets.EXTERNAL_PIPELINE_SHARED_SECRET }}

    - name: Step 4 - Receive result of long running job and continue
      id: step_4
      run: dapr run --app-id step_4 --app-protocol grpc --app-port 50051 -d ./components python3 step_4.py